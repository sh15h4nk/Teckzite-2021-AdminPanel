"""empty message

Revision ID: d00f4eef6980
Revises: e2267aa27859
Create Date: 2021-05-29 21:38:08.475126

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd00f4eef6980'
down_revision = 'e2267aa27859'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tech_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('userId', sa.String(length=7), nullable=False),
    sa.Column('gid', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('gender', sa.String(length=1), nullable=True),
    sa.Column('college', sa.String(length=200), nullable=True),
    sa.Column('rgukt_location', sa.String(length=50), nullable=True),
    sa.Column('collegeId', sa.String(length=30), nullable=True),
    sa.Column('idcard_url', sa.String(length=128), nullable=True),
    sa.Column('year', sa.String(length=4), nullable=True),
    sa.Column('branch', sa.String(length=3), nullable=True),
    sa.Column('phone', sa.String(length=10), nullable=True),
    sa.Column('registration_status', sa.Integer(), nullable=True),
    sa.Column('payment_status', sa.Integer(), nullable=True),
    sa.Column('hidden', sa.Integer(), nullable=True),
    sa.Column('referral', sa.String(length=30), nullable=True),
    sa.Column('survey', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tech_user')),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('email', name=op.f('uq_tech_user_email')),
    sa.UniqueConstraint('gid'),
    sa.UniqueConstraint('gid', name=op.f('uq_tech_user_gid')),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('phone', name=op.f('uq_tech_user_phone')),
    sa.UniqueConstraint('userId'),
    sa.UniqueConstraint('userId', name=op.f('uq_tech_user_userId'))
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=192), nullable=True),
    sa.Column('district', sa.String(length=192), nullable=True),
    sa.Column('city', sa.String(length=192), nullable=True),
    sa.Column('pin', sa.String(length=10), nullable=True),
    sa.Column('t_userId', sa.String(length=7), nullable=True),
    sa.ForeignKeyConstraint(['t_userId'], ['tech_user.userId'], name=op.f('fk_address_t_userId_tech_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_address')),
    sa.UniqueConstraint('t_userId'),
    sa.UniqueConstraint('t_userId', name=op.f('uq_address_t_userId'))
    )
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teamId', sa.String(length=7), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('fk_team_event_id_event')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_team')),
    sa.UniqueConstraint('teamId'),
    sa.UniqueConstraint('teamId', name=op.f('uq_team_teamId'))
    )
    op.create_table('member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stauts', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], name=op.f('fk_member_team_id_team')),
    sa.ForeignKeyConstraint(['user_id'], ['tech_user.id'], name=op.f('fk_member_user_id_tech_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_member'))
    )
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.drop_index('eventId')
        batch_op.drop_index('organiser_id')
        batch_op.drop_index('title')
        batch_op.create_unique_constraint(batch_op.f('uq_event_eventId'), ['eventId'])
        batch_op.create_unique_constraint(batch_op.f('uq_event_organiser_id'), ['organiser_id'])
        batch_op.create_unique_constraint(batch_op.f('uq_event_title'), ['title'])

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.drop_index('session_id')
        batch_op.create_unique_constraint(batch_op.f('uq_sessions_session_id'), ['session_id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('email')
        batch_op.drop_index('phone')
        batch_op.drop_index('userId')
        batch_op.create_unique_constraint(batch_op.f('uq_user_email'), ['email'])
        batch_op.create_unique_constraint(batch_op.f('uq_user_phone'), ['phone'])
        batch_op.create_unique_constraint(batch_op.f('uq_user_userId'), ['userId'])

    with op.batch_alter_table('workshop', schema=None) as batch_op:
        batch_op.drop_index('coordinator_id')
        batch_op.drop_index('workshopId')
        batch_op.create_unique_constraint(batch_op.f('uq_workshop_coordinator_id'), ['coordinator_id'])
        batch_op.create_unique_constraint(batch_op.f('uq_workshop_workshopId'), ['workshopId'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workshop', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_workshop_workshopId'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_workshop_coordinator_id'), type_='unique')
        batch_op.create_index('workshopId', ['workshopId'], unique=False)
        batch_op.create_index('coordinator_id', ['coordinator_id'], unique=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_user_userId'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_user_phone'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_user_email'), type_='unique')
        batch_op.create_index('userId', ['userId'], unique=False)
        batch_op.create_index('phone', ['phone'], unique=False)
        batch_op.create_index('email', ['email'], unique=False)

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_sessions_session_id'), type_='unique')
        batch_op.create_index('session_id', ['session_id'], unique=False)

    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_event_title'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_event_organiser_id'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_event_eventId'), type_='unique')
        batch_op.create_index('title', ['title'], unique=False)
        batch_op.create_index('organiser_id', ['organiser_id'], unique=False)
        batch_op.create_index('eventId', ['eventId'], unique=False)

    op.drop_table('member')
    op.drop_table('team')
    op.drop_table('address')
    op.drop_table('tech_user')
    # ### end Alembic commands ###
